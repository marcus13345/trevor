{
  "$Setup": "Setup",
  "$Start": "Start",
  "Entity": "Http.js",
  "Pid": "F4AE487744184EEB8AC5E929D7088B8E",
  "Module": "xGraph.Web.Server",
  "Apex": "F4AE487744184EEB8AC5E929D7088B8E",
  "Port": 8080,
  "Url": "Heatbugs",
  "HTML": "<!DOCTYPE html>\n<html class=\"casco\">\n<meta charset=\"utf-8\" />\n\n<head>\n\t<title>xGraph</title>\n\n\t<script src=\"/socket.io/socket.io.js\"></script>\n\t<script>\n\t\tSockIO = io();\n\t\tSockIO.on('connect', () => { SockIO.emit('message', JSON.stringify({ Cmd: 'GetConfig', Path: location.pathname.substr(1).toLowerCase() })); });\n\t\tSockIO.on('message', function (data) {\n\t\t\tvar com = JSON.parse(data);\n\t\t\teval(com.Nxs);\n\t\t\t__Nexus.boot(SockIO, com);\n\t\t});\n\n\t</script>\n</head>\n\n<body id=\"Body\" style=\"height:100vh;margin:0px\" oncontextmenu=\"return false;\">\n\n</body>\n\n</html>",
  "Heatbugs": {
    "Config": {
      "Sources": {
        "local": "./"
      },
      "Modules": {
        "Heatbugs": {
          "Module": "local.Modules.HeatBugsModule",
          "Par": {}
        }
      }
    },
    "Cache": ""
  }
}