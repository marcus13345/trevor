{
  "Mouse.js": "//# sourceURL=Mouse\n(function Mouse() {\n\n\t//-----------------------------------------------------dispatch\n\tvar dispatch = {\n\t\tSetDomElement:SetDomElement\n\t};\n\n\treturn {\n\t\tdispatch: dispatch\n\t};\n\n\t//-----------------------------------------------------Start\n\tfunction SetDomElement(com, fun) {\n\t\tconsole.log('--Mouse/SetDomElement');\n\t\tlet Vlt = this.Vlt;\n\t\tVlt.domElement = (\"length\" in com.DomElement)? com.DomElement : $(com.DomElement);\n\t\t\n\t\t//needed these to get the focus to work for keydown events\n\t\tVlt.domElement.focus();\n\t\tVlt.domElement.attr('tabindex', 0);\n\n\t\tVlt.Active = false;\n\t\tVlt.Mouse = {};\n\t\tVlt.Mouse.Mode = 'Idle';\n\t\tVlt.Mouse.inPanel = true;\n\t\tdomElement = Vlt.domElement\n\n\t\tdomElement.on(\"mouseenter\",\"canvas\",(evt) => {\n\t\t});\n\t\tdomElement.on(\"mouseleave\",\"canvas\",(evt) => {\n\t\t\tlet info = {};\t\t\t\n\t\t\tinfo.Action = 'MouseLeave';\n\t\t\tthis.send({Cmd:\"DispatchEvent\", info:info, mouse:Vlt.Mouse}, this.Par.Handler);\n\t\t\t//evt.stopPropagation();\n\t\t\tevt.returnValue = false;\n\t\t});\n\t\tdomElement.on(\"wheel\",\"canvas\", (evt) =>{\n\t\t\tconsole.log(\"Handler \", this.Par.Handler.substr(30));\n\t\t\tlet info = {};\n\t\t\tevt = evt.originalEvent;\n\t\t\tlet fac = (evt.detail < 0 || evt.wheelDelta > 0) ? 1 : -1;\n\t\t\tinfo.Action = 'Wheel';\n\t\t\tinfo.Factor = fac;\n\t\t\tthis.send({Cmd:\"DispatchEvent\", info:info, mouse:Vlt.Mouse}, this.Par.Handler);\n\t\t\t//evt.stopPropagation();\n\t\t\tevt.returnValue = false;\n\t\t});\n\t\tdomElement.on(\"mousedown\",\"canvas\",(evt) => {\n\t\t\tconsole.log(\"Handler \", this.Par.Handler.substr(30));\n\t\t\t\n\t\t\tinfo = {};\n\t\t\tinfo.Mouse = {};\n\t\t\tinfo.Mouse.x = evt.clientX;\n\t\t\tinfo.Mouse.y = evt.clientY;\n\t\t\tswitch (evt.which) {\n\t\t\t\tcase 1:\t// Left mouse\n\t\t\t\t\tinfo.Action = 'LeftMouseDown';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3: // Right mouse\n\t\t\t\t\tinfo.Action = 'RightMouseDown';\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log(\"mousedown which\");\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.send({Cmd:\"DispatchEvent\", info:info, mouse:Vlt.Mouse}, this.Par.Handler);\n\t\t\t//evt.stopPropagation();\n\t\t\tevt.returnValue = false;\n\t\t});\n\t\tdomElement.on(\"mousemove\", \"canvas\",(evt) =>{\n\t\t\t//console.log(\"Handler \", this.Par.Handler.substr(30));\n\t\t\t\n\t\t\tlet info = {};\t\t\t\n\t\t\tinfo.Action = 'Move';\n\t\t\tinfo.Mouse = {};\n\t\t\tinfo.Mouse.x = evt.clientX;\n\t\t\tinfo.Mouse.y = evt.clientY;\n\t\t\tthis.send({Cmd:\"DispatchEvent\", info:info, mouse:Vlt.Mouse}, this.Par.Handler);\n\t\t\t//evt.stopPropagation();\n\t\t\tevt.returnValue = false;\n\t\t});\n\t\tdomElement.on(\"mouseup\",\"canvas\",(evt) => {\n\t\t\tlet info = {};\n\t\t\tswitch (evt.which) {\n\t\t\t\tcase 1:\t// Left mouse\n\t\t\t\t\tinfo.Action = 'LeftMouseUp';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3: // Right mouse\n\t\t\t\t\tinfo.Action = 'RightMouseUp';\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.send({Cmd:\"DispatchEvent\", info:info, mouse:Vlt.Mouse}, this.Par.Handler);\n\t\t\t//evt.stopPropagation();\n\t\t\tevt.returnValue = false;\n\t\t});\n\t\tdomElement.on(\"keydown\", (evt) =>{\n\t\t\tlet info = {};\t\t\t\n\t\t\tinfo.Action = 'keydown';\n\t\t\tinfo.CharKey = evt.key;\n\t\t\tthis.send({Cmd:\"DispatchEvent\", info:info, mouse:Vlt.Mouse}, this.Par.Handler);\n\t\t});\n\n\t\tif (fun)\n\t\t\tfun(null, com);\n\t}\n})();",
  "schema.json": "{\n\t\"Apex\": {\n\t\t\"Entity\": \"Mouse.js\"\n\t}\n}\n",
  "ModName": "Jungle.Modules.Mouse"
}